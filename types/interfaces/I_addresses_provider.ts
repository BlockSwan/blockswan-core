/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface I_addresses_providerInterface extends utils.Interface {
  functions: {
    "get_acl_admin()": FunctionFragment;
    "get_acl_manager()": FunctionFragment;
    "get_address(bytes32)": FunctionFragment;
    "get_data_provider()": FunctionFragment;
    "get_escrow()": FunctionFragment;
    "get_gig()": FunctionFragment;
    "get_marketplace_id()": FunctionFragment;
    "get_offer()": FunctionFragment;
    "get_price_oracle()": FunctionFragment;
    "get_protocol_configurator()": FunctionFragment;
    "get_user()": FunctionFragment;
    "set_acl_admin(address)": FunctionFragment;
    "set_acl_manager(address)": FunctionFragment;
    "set_address(bytes32,address)": FunctionFragment;
    "set_address_as_proxy(bytes32,address)": FunctionFragment;
    "set_data_provider(address)": FunctionFragment;
    "set_escrow_impl(address)": FunctionFragment;
    "set_gig_impl(address)": FunctionFragment;
    "set_marketplace_id(string)": FunctionFragment;
    "set_offer_impl(address)": FunctionFragment;
    "set_price_oracle(address)": FunctionFragment;
    "set_protocol_configurator_impl(address)": FunctionFragment;
    "set_user_impl(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "get_acl_admin"
      | "get_acl_manager"
      | "get_address"
      | "get_data_provider"
      | "get_escrow"
      | "get_gig"
      | "get_marketplace_id"
      | "get_offer"
      | "get_price_oracle"
      | "get_protocol_configurator"
      | "get_user"
      | "set_acl_admin"
      | "set_acl_manager"
      | "set_address"
      | "set_address_as_proxy"
      | "set_data_provider"
      | "set_escrow_impl"
      | "set_gig_impl"
      | "set_marketplace_id"
      | "set_offer_impl"
      | "set_price_oracle"
      | "set_protocol_configurator_impl"
      | "set_user_impl"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "get_acl_admin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get_acl_manager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get_address",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "get_data_provider",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get_escrow",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "get_gig", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "get_marketplace_id",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "get_offer", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "get_price_oracle",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get_protocol_configurator",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "get_user", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "set_acl_admin",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_acl_manager",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_address",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_address_as_proxy",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_data_provider",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_escrow_impl",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_gig_impl",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_marketplace_id",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_offer_impl",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_price_oracle",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_protocol_configurator_impl",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "set_user_impl",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "get_acl_admin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_acl_manager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_address",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_data_provider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get_escrow", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "get_gig", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "get_marketplace_id",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get_offer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "get_price_oracle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_protocol_configurator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get_user", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "set_acl_admin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_acl_manager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_address",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_address_as_proxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_data_provider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_escrow_impl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_gig_impl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_marketplace_id",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_offer_impl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_price_oracle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_protocol_configurator_impl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_user_impl",
    data: BytesLike
  ): Result;

  events: {
    "ev_acl_admin_updated(address,address)": EventFragment;
    "ev_acl_manager_updated(address,address)": EventFragment;
    "ev_address_set(bytes32,address,address)": EventFragment;
    "ev_address_set_as_proxy(bytes32,address,address,address)": EventFragment;
    "ev_data_provider_updated(address,address)": EventFragment;
    "ev_escrow_updated(address,address)": EventFragment;
    "ev_gig_updated(address,address)": EventFragment;
    "ev_marketplace_id_set(string,string)": EventFragment;
    "ev_offer_updated(address,address)": EventFragment;
    "ev_price_oracle_updated(address,address)": EventFragment;
    "ev_protocol_configurator_updated(address,address)": EventFragment;
    "ev_proxy_created(bytes32,address,address)": EventFragment;
    "ev_user_updated(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ev_acl_admin_updated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_acl_manager_updated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_address_set"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_address_set_as_proxy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_data_provider_updated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_escrow_updated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_gig_updated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_marketplace_id_set"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_offer_updated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_price_oracle_updated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ev_protocol_configurator_updated"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_proxy_created"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ev_user_updated"): EventFragment;
}

export interface ev_acl_admin_updatedEventObject {
  old_address: string;
  new_address: string;
}
export type ev_acl_admin_updatedEvent = TypedEvent<
  [string, string],
  ev_acl_admin_updatedEventObject
>;

export type ev_acl_admin_updatedEventFilter =
  TypedEventFilter<ev_acl_admin_updatedEvent>;

export interface ev_acl_manager_updatedEventObject {
  old_address: string;
  new_address: string;
}
export type ev_acl_manager_updatedEvent = TypedEvent<
  [string, string],
  ev_acl_manager_updatedEventObject
>;

export type ev_acl_manager_updatedEventFilter =
  TypedEventFilter<ev_acl_manager_updatedEvent>;

export interface ev_address_setEventObject {
  id: string;
  old_address: string;
  new_address: string;
}
export type ev_address_setEvent = TypedEvent<
  [string, string, string],
  ev_address_setEventObject
>;

export type ev_address_setEventFilter = TypedEventFilter<ev_address_setEvent>;

export interface ev_address_set_as_proxyEventObject {
  id: string;
  proxy_address: string;
  old_implementation_address: string;
  new_implementation_address: string;
}
export type ev_address_set_as_proxyEvent = TypedEvent<
  [string, string, string, string],
  ev_address_set_as_proxyEventObject
>;

export type ev_address_set_as_proxyEventFilter =
  TypedEventFilter<ev_address_set_as_proxyEvent>;

export interface ev_data_provider_updatedEventObject {
  old_address: string;
  new_address: string;
}
export type ev_data_provider_updatedEvent = TypedEvent<
  [string, string],
  ev_data_provider_updatedEventObject
>;

export type ev_data_provider_updatedEventFilter =
  TypedEventFilter<ev_data_provider_updatedEvent>;

export interface ev_escrow_updatedEventObject {
  old_address: string;
  new_address: string;
}
export type ev_escrow_updatedEvent = TypedEvent<
  [string, string],
  ev_escrow_updatedEventObject
>;

export type ev_escrow_updatedEventFilter =
  TypedEventFilter<ev_escrow_updatedEvent>;

export interface ev_gig_updatedEventObject {
  old_address: string;
  new_address: string;
}
export type ev_gig_updatedEvent = TypedEvent<
  [string, string],
  ev_gig_updatedEventObject
>;

export type ev_gig_updatedEventFilter = TypedEventFilter<ev_gig_updatedEvent>;

export interface ev_marketplace_id_setEventObject {
  old_marketplace_id: string;
  new_marketplace_id: string;
}
export type ev_marketplace_id_setEvent = TypedEvent<
  [string, string],
  ev_marketplace_id_setEventObject
>;

export type ev_marketplace_id_setEventFilter =
  TypedEventFilter<ev_marketplace_id_setEvent>;

export interface ev_offer_updatedEventObject {
  old_address: string;
  new_address: string;
}
export type ev_offer_updatedEvent = TypedEvent<
  [string, string],
  ev_offer_updatedEventObject
>;

export type ev_offer_updatedEventFilter =
  TypedEventFilter<ev_offer_updatedEvent>;

export interface ev_price_oracle_updatedEventObject {
  old_address: string;
  new_address: string;
}
export type ev_price_oracle_updatedEvent = TypedEvent<
  [string, string],
  ev_price_oracle_updatedEventObject
>;

export type ev_price_oracle_updatedEventFilter =
  TypedEventFilter<ev_price_oracle_updatedEvent>;

export interface ev_protocol_configurator_updatedEventObject {
  old_address: string;
  new_address: string;
}
export type ev_protocol_configurator_updatedEvent = TypedEvent<
  [string, string],
  ev_protocol_configurator_updatedEventObject
>;

export type ev_protocol_configurator_updatedEventFilter =
  TypedEventFilter<ev_protocol_configurator_updatedEvent>;

export interface ev_proxy_createdEventObject {
  id: string;
  proxy_address: string;
  implementation_address: string;
}
export type ev_proxy_createdEvent = TypedEvent<
  [string, string, string],
  ev_proxy_createdEventObject
>;

export type ev_proxy_createdEventFilter =
  TypedEventFilter<ev_proxy_createdEvent>;

export interface ev_user_updatedEventObject {
  old_address: string;
  new_address: string;
}
export type ev_user_updatedEvent = TypedEvent<
  [string, string],
  ev_user_updatedEventObject
>;

export type ev_user_updatedEventFilter = TypedEventFilter<ev_user_updatedEvent>;

export interface I_addresses_provider extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: I_addresses_providerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    get_acl_admin(overrides?: CallOverrides): Promise<[string]>;

    get_acl_manager(overrides?: CallOverrides): Promise<[string]>;

    get_address(
      id: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    get_data_provider(overrides?: CallOverrides): Promise<[string]>;

    get_escrow(overrides?: CallOverrides): Promise<[string]>;

    get_gig(overrides?: CallOverrides): Promise<[string]>;

    get_marketplace_id(overrides?: CallOverrides): Promise<[string]>;

    get_offer(overrides?: CallOverrides): Promise<[string]>;

    get_price_oracle(overrides?: CallOverrides): Promise<[string]>;

    get_protocol_configurator(overrides?: CallOverrides): Promise<[string]>;

    get_user(overrides?: CallOverrides): Promise<[string]>;

    set_acl_admin(
      new_acl_admin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_acl_manager(
      new_acl_manager: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_address(
      id: PromiseOrValue<BytesLike>,
      new_address: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_address_as_proxy(
      id: PromiseOrValue<BytesLike>,
      new_implementation_address: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_data_provider(
      new_data_provider: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_escrow_impl(
      new_escrow_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_gig_impl(
      new_gig_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_marketplace_id(
      new_marketplace_id: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_offer_impl(
      new_offer_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_price_oracle(
      new_price_oracle: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_protocol_configurator_impl(
      new_pool_configurator_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    set_user_impl(
      new_user_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  get_acl_admin(overrides?: CallOverrides): Promise<string>;

  get_acl_manager(overrides?: CallOverrides): Promise<string>;

  get_address(
    id: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  get_data_provider(overrides?: CallOverrides): Promise<string>;

  get_escrow(overrides?: CallOverrides): Promise<string>;

  get_gig(overrides?: CallOverrides): Promise<string>;

  get_marketplace_id(overrides?: CallOverrides): Promise<string>;

  get_offer(overrides?: CallOverrides): Promise<string>;

  get_price_oracle(overrides?: CallOverrides): Promise<string>;

  get_protocol_configurator(overrides?: CallOverrides): Promise<string>;

  get_user(overrides?: CallOverrides): Promise<string>;

  set_acl_admin(
    new_acl_admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_acl_manager(
    new_acl_manager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_address(
    id: PromiseOrValue<BytesLike>,
    new_address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_address_as_proxy(
    id: PromiseOrValue<BytesLike>,
    new_implementation_address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_data_provider(
    new_data_provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_escrow_impl(
    new_escrow_impl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_gig_impl(
    new_gig_impl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_marketplace_id(
    new_marketplace_id: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_offer_impl(
    new_offer_impl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_price_oracle(
    new_price_oracle: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_protocol_configurator_impl(
    new_pool_configurator_impl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  set_user_impl(
    new_user_impl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    get_acl_admin(overrides?: CallOverrides): Promise<string>;

    get_acl_manager(overrides?: CallOverrides): Promise<string>;

    get_address(
      id: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    get_data_provider(overrides?: CallOverrides): Promise<string>;

    get_escrow(overrides?: CallOverrides): Promise<string>;

    get_gig(overrides?: CallOverrides): Promise<string>;

    get_marketplace_id(overrides?: CallOverrides): Promise<string>;

    get_offer(overrides?: CallOverrides): Promise<string>;

    get_price_oracle(overrides?: CallOverrides): Promise<string>;

    get_protocol_configurator(overrides?: CallOverrides): Promise<string>;

    get_user(overrides?: CallOverrides): Promise<string>;

    set_acl_admin(
      new_acl_admin: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_acl_manager(
      new_acl_manager: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_address(
      id: PromiseOrValue<BytesLike>,
      new_address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_address_as_proxy(
      id: PromiseOrValue<BytesLike>,
      new_implementation_address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_data_provider(
      new_data_provider: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_escrow_impl(
      new_escrow_impl: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_gig_impl(
      new_gig_impl: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_marketplace_id(
      new_marketplace_id: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_offer_impl(
      new_offer_impl: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_price_oracle(
      new_price_oracle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_protocol_configurator_impl(
      new_pool_configurator_impl: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    set_user_impl(
      new_user_impl: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ev_acl_admin_updated(address,address)"(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_acl_admin_updatedEventFilter;
    ev_acl_admin_updated(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_acl_admin_updatedEventFilter;

    "ev_acl_manager_updated(address,address)"(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_acl_manager_updatedEventFilter;
    ev_acl_manager_updated(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_acl_manager_updatedEventFilter;

    "ev_address_set(bytes32,address,address)"(
      id?: PromiseOrValue<BytesLike> | null,
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_address_setEventFilter;
    ev_address_set(
      id?: PromiseOrValue<BytesLike> | null,
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_address_setEventFilter;

    "ev_address_set_as_proxy(bytes32,address,address,address)"(
      id?: PromiseOrValue<BytesLike> | null,
      proxy_address?: PromiseOrValue<string> | null,
      old_implementation_address?: null,
      new_implementation_address?: PromiseOrValue<string> | null
    ): ev_address_set_as_proxyEventFilter;
    ev_address_set_as_proxy(
      id?: PromiseOrValue<BytesLike> | null,
      proxy_address?: PromiseOrValue<string> | null,
      old_implementation_address?: null,
      new_implementation_address?: PromiseOrValue<string> | null
    ): ev_address_set_as_proxyEventFilter;

    "ev_data_provider_updated(address,address)"(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_data_provider_updatedEventFilter;
    ev_data_provider_updated(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_data_provider_updatedEventFilter;

    "ev_escrow_updated(address,address)"(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_escrow_updatedEventFilter;
    ev_escrow_updated(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_escrow_updatedEventFilter;

    "ev_gig_updated(address,address)"(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_gig_updatedEventFilter;
    ev_gig_updated(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_gig_updatedEventFilter;

    "ev_marketplace_id_set(string,string)"(
      old_marketplace_id?: PromiseOrValue<string> | null,
      new_marketplace_id?: PromiseOrValue<string> | null
    ): ev_marketplace_id_setEventFilter;
    ev_marketplace_id_set(
      old_marketplace_id?: PromiseOrValue<string> | null,
      new_marketplace_id?: PromiseOrValue<string> | null
    ): ev_marketplace_id_setEventFilter;

    "ev_offer_updated(address,address)"(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_offer_updatedEventFilter;
    ev_offer_updated(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_offer_updatedEventFilter;

    "ev_price_oracle_updated(address,address)"(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_price_oracle_updatedEventFilter;
    ev_price_oracle_updated(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_price_oracle_updatedEventFilter;

    "ev_protocol_configurator_updated(address,address)"(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_protocol_configurator_updatedEventFilter;
    ev_protocol_configurator_updated(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_protocol_configurator_updatedEventFilter;

    "ev_proxy_created(bytes32,address,address)"(
      id?: PromiseOrValue<BytesLike> | null,
      proxy_address?: PromiseOrValue<string> | null,
      implementation_address?: PromiseOrValue<string> | null
    ): ev_proxy_createdEventFilter;
    ev_proxy_created(
      id?: PromiseOrValue<BytesLike> | null,
      proxy_address?: PromiseOrValue<string> | null,
      implementation_address?: PromiseOrValue<string> | null
    ): ev_proxy_createdEventFilter;

    "ev_user_updated(address,address)"(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_user_updatedEventFilter;
    ev_user_updated(
      old_address?: PromiseOrValue<string> | null,
      new_address?: PromiseOrValue<string> | null
    ): ev_user_updatedEventFilter;
  };

  estimateGas: {
    get_acl_admin(overrides?: CallOverrides): Promise<BigNumber>;

    get_acl_manager(overrides?: CallOverrides): Promise<BigNumber>;

    get_address(
      id: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_data_provider(overrides?: CallOverrides): Promise<BigNumber>;

    get_escrow(overrides?: CallOverrides): Promise<BigNumber>;

    get_gig(overrides?: CallOverrides): Promise<BigNumber>;

    get_marketplace_id(overrides?: CallOverrides): Promise<BigNumber>;

    get_offer(overrides?: CallOverrides): Promise<BigNumber>;

    get_price_oracle(overrides?: CallOverrides): Promise<BigNumber>;

    get_protocol_configurator(overrides?: CallOverrides): Promise<BigNumber>;

    get_user(overrides?: CallOverrides): Promise<BigNumber>;

    set_acl_admin(
      new_acl_admin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_acl_manager(
      new_acl_manager: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_address(
      id: PromiseOrValue<BytesLike>,
      new_address: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_address_as_proxy(
      id: PromiseOrValue<BytesLike>,
      new_implementation_address: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_data_provider(
      new_data_provider: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_escrow_impl(
      new_escrow_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_gig_impl(
      new_gig_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_marketplace_id(
      new_marketplace_id: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_offer_impl(
      new_offer_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_price_oracle(
      new_price_oracle: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_protocol_configurator_impl(
      new_pool_configurator_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    set_user_impl(
      new_user_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    get_acl_admin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    get_acl_manager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    get_address(
      id: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_data_provider(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    get_escrow(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    get_gig(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    get_marketplace_id(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_offer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    get_price_oracle(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    get_protocol_configurator(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_user(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    set_acl_admin(
      new_acl_admin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_acl_manager(
      new_acl_manager: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_address(
      id: PromiseOrValue<BytesLike>,
      new_address: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_address_as_proxy(
      id: PromiseOrValue<BytesLike>,
      new_implementation_address: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_data_provider(
      new_data_provider: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_escrow_impl(
      new_escrow_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_gig_impl(
      new_gig_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_marketplace_id(
      new_marketplace_id: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_offer_impl(
      new_offer_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_price_oracle(
      new_price_oracle: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_protocol_configurator_impl(
      new_pool_configurator_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    set_user_impl(
      new_user_impl: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
