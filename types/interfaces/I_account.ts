/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export declare namespace Counters {
  export type CounterStruct = { _value: PromiseOrValue<BigNumberish> };

  export type CounterStructOutput = [BigNumber] & { _value: BigNumber };
}

export declare namespace L_data_types {
  export type S_accountStruct = {
    is_init: PromiseOrValue<boolean>;
    inviter_id: PromiseOrValue<BigNumberish>;
    xp: PromiseOrValue<BigNumberish>;
    pub_keys: PromiseOrValue<string>[];
    affiliates: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>];
    metadata: PromiseOrValue<string>;
    invite_buyer: Counters.CounterStruct;
    invite_seller: Counters.CounterStruct;
  };

  export type S_accountStructOutput = [
    boolean,
    BigNumber,
    BigNumber,
    string[],
    [BigNumber, BigNumber],
    string,
    Counters.CounterStructOutput,
    Counters.CounterStructOutput
  ] & {
    is_init: boolean;
    inviter_id: BigNumber;
    xp: BigNumber;
    pub_keys: string[];
    affiliates: [BigNumber, BigNumber];
    metadata: string;
    invite_buyer: Counters.CounterStructOutput;
    invite_seller: Counters.CounterStructOutput;
  };
}

export interface I_accountInterface extends utils.Interface {
  functions: {
    "ADDRESSES_PROVIDER()": FunctionFragment;
    "create_account()": FunctionFragment;
    "get_account_by_address(address)": FunctionFragment;
    "get_account_by_id(uint256)": FunctionFragment;
    "get_account_id_by_address(address)": FunctionFragment;
    "get_accounts_count()": FunctionFragment;
    "get_accounts_list()": FunctionFragment;
    "get_pub_keys_count()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "ADDRESSES_PROVIDER"
      | "create_account"
      | "get_account_by_address"
      | "get_account_by_id"
      | "get_account_id_by_address"
      | "get_accounts_count"
      | "get_accounts_list"
      | "get_pub_keys_count"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "ADDRESSES_PROVIDER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "create_account",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get_account_by_address",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "get_account_by_id",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "get_account_id_by_address",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "get_accounts_count",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get_accounts_list",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get_pub_keys_count",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "ADDRESSES_PROVIDER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "create_account",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_account_by_address",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_account_by_id",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_account_id_by_address",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_accounts_count",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_accounts_list",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pub_keys_count",
    data: BytesLike
  ): Result;

  events: {};
}

export interface I_account extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: I_accountInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    ADDRESSES_PROVIDER(overrides?: CallOverrides): Promise<[string]>;

    create_account(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    get_account_by_address(
      pub_key: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[L_data_types.S_accountStructOutput]>;

    get_account_by_id(
      account_id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[L_data_types.S_accountStructOutput]>;

    get_account_id_by_address(
      pub_key: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    get_accounts_count(overrides?: CallOverrides): Promise<[BigNumber]>;

    get_accounts_list(
      overrides?: CallOverrides
    ): Promise<[L_data_types.S_accountStructOutput[]]>;

    get_pub_keys_count(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  ADDRESSES_PROVIDER(overrides?: CallOverrides): Promise<string>;

  create_account(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  get_account_by_address(
    pub_key: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<L_data_types.S_accountStructOutput>;

  get_account_by_id(
    account_id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<L_data_types.S_accountStructOutput>;

  get_account_id_by_address(
    pub_key: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  get_accounts_count(overrides?: CallOverrides): Promise<BigNumber>;

  get_accounts_list(
    overrides?: CallOverrides
  ): Promise<L_data_types.S_accountStructOutput[]>;

  get_pub_keys_count(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    ADDRESSES_PROVIDER(overrides?: CallOverrides): Promise<string>;

    create_account(overrides?: CallOverrides): Promise<void>;

    get_account_by_address(
      pub_key: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<L_data_types.S_accountStructOutput>;

    get_account_by_id(
      account_id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<L_data_types.S_accountStructOutput>;

    get_account_id_by_address(
      pub_key: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_accounts_count(overrides?: CallOverrides): Promise<BigNumber>;

    get_accounts_list(
      overrides?: CallOverrides
    ): Promise<L_data_types.S_accountStructOutput[]>;

    get_pub_keys_count(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    ADDRESSES_PROVIDER(overrides?: CallOverrides): Promise<BigNumber>;

    create_account(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    get_account_by_address(
      pub_key: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_account_by_id(
      account_id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_account_id_by_address(
      pub_key: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_accounts_count(overrides?: CallOverrides): Promise<BigNumber>;

    get_accounts_list(overrides?: CallOverrides): Promise<BigNumber>;

    get_pub_keys_count(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    ADDRESSES_PROVIDER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    create_account(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    get_account_by_address(
      pub_key: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_account_by_id(
      account_id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_account_id_by_address(
      pub_key: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_accounts_count(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_accounts_list(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    get_pub_keys_count(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
