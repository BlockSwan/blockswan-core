/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  L_gig_data_logic,
  L_gig_data_logicInterface,
} from "../../../../protocol/libraries/logics/L_gig_data_logic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gig_id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "is_init",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "seller_id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "time_required",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
            ],
            internalType: "struct l_data_types.s_package[]",
            name: "packages",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct l_data_types.s_gig",
        name: "gig",
        type: "tuple",
      },
    ],
    name: "ev_gig_data_updated",
    type: "event",
  },
];

const _bytecode =
  "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220996bddb0d70cac9f4bf9b2215e25eab0ab20fac91a270e122ab4bbe06a6b46cd64736f6c634300080a0033";

type L_gig_data_logicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L_gig_data_logicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L_gig_data_logic__factory extends ContractFactory {
  constructor(...args: L_gig_data_logicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L_gig_data_logic> {
    return super.deploy(overrides || {}) as Promise<L_gig_data_logic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L_gig_data_logic {
    return super.attach(address) as L_gig_data_logic;
  }
  override connect(signer: Signer): L_gig_data_logic__factory {
    return super.connect(signer) as L_gig_data_logic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L_gig_data_logicInterface {
    return new utils.Interface(_abi) as L_gig_data_logicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L_gig_data_logic {
    return new Contract(address, _abi, signerOrProvider) as L_gig_data_logic;
  }
}
