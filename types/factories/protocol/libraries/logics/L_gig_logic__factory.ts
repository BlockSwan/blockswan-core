/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  L_gig_logic,
  L_gig_logicInterface,
} from "../../../../protocol/libraries/logics/L_gig_logic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gig_id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "is_init",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "seller_id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "time_required",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
            ],
            internalType: "struct l_data_types.s_package[]",
            name: "packages",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct l_data_types.s_gig",
        name: "gig",
        type: "tuple",
      },
    ],
    name: "ev_gig_added",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gig_id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "is_init",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "seller_id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "time_required",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
            ],
            internalType: "struct l_data_types.s_package[]",
            name: "packages",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct l_data_types.s_gig",
        name: "gig",
        type: "tuple",
      },
    ],
    name: "ev_gig_edited",
    type: "event",
  },
];

const _bytecode =
  "0x61061361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80636e6612401461003a575b600080fd5b81801561004657600080fd5b5061005a61005536600461029b565b61006e565b604051901515815260200160405180910390f35b803560009081526020838152604080832054815180830190925260018252600760fb1b928201929092529060ff16156100c35760405162461bcd60e51b81526004016100ba91906102e9565b60405180910390fd5b5061013c60208301356100d9604085018561033e565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061011b92505050606086018661038c565b61012491610446565b85356000908152602088905260409020929190610145565b50600192915050565b835460ff1916600190811785558401839055815161016c9060028601906020850190610202565b5060005b81518160ff1610156101fb5784600301828260ff16815181106101955761019561055e565b60209081029190910181015182546001818101855560009485529383902082516003909202019081558183015193810193909355604081015180519193926101e592600285019290910190610202565b50505080806101f390610574565b915050610170565b5050505050565b82805461020e906105a2565b90600052602060002090601f0160209004810192826102305760008555610276565b82601f1061024957805160ff1916838001178555610276565b82800160010185558215610276579182015b8281111561027657825182559160200191906001019061025b565b50610282929150610286565b5090565b5b808211156102825760008155600101610287565b600080604083850312156102ae57600080fd5b82359150602083013567ffffffffffffffff8111156102cc57600080fd5b8301608081860312156102de57600080fd5b809150509250929050565b600060208083528351808285015260005b81811015610316578581018301518582016040015282016102fa565b81811115610328576000604083870101525b50601f01601f1916929092016040019392505050565b6000808335601e1984360301811261035557600080fd5b83018035915067ffffffffffffffff82111561037057600080fd5b60200191503681900382131561038557600080fd5b9250929050565b6000808335601e198436030181126103a357600080fd5b83018035915067ffffffffffffffff8211156103be57600080fd5b6020019150600581901b360382131561038557600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561040f5761040f6103d6565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561043e5761043e6103d6565b604052919050565b600067ffffffffffffffff80841115610461576104616103d6565b8360051b6020610472818301610415565b86815291850191818101903684111561048a57600080fd5b865b84811015610552578035868111156104a45760008081fd5b880160603682900312156104b85760008081fd5b6104c06103ec565b813581528582013586820152604080830135898111156104e05760008081fd5b9290920191601f36818501126104f65760008081fd5b83358a811115610508576105086103d6565b610519818301601f19168a01610415565b915080825236898287010111156105305760008081fd5b808986018a84013760009082018901529082015284525091830191830161048c565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81141561059957634e487b7160e01b600052601160045260246000fd5b60010192915050565b600181811c908216806105b657607f821691505b602082108114156105d757634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220cf335c027bc7a2d549a56e67596f56ad18ebcfa9f2fffaa3629cd7589cd729f564736f6c634300080a0033";

type L_gig_logicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L_gig_logicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L_gig_logic__factory extends ContractFactory {
  constructor(...args: L_gig_logicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L_gig_logic> {
    return super.deploy(overrides || {}) as Promise<L_gig_logic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L_gig_logic {
    return super.attach(address) as L_gig_logic;
  }
  override connect(signer: Signer): L_gig_logic__factory {
    return super.connect(signer) as L_gig_logic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L_gig_logicInterface {
    return new utils.Interface(_abi) as L_gig_logicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L_gig_logic {
    return new Contract(address, _abi, signerOrProvider) as L_gig_logic;
  }
}
