/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  L_account_logic,
  L_account_logicInterface,
} from "../../../../protocol/libraries/logics/L_account_logic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "account_id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "is_init",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "inviter_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xp",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "pub_keys",
            type: "address[]",
          },
          {
            internalType: "uint256[2]",
            name: "affiliates",
            type: "uint256[2]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_buyer",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_seller",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct l_data_types.s_account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "ev_account_added",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "account_id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "is_init",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "inviter_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xp",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "pub_keys",
            type: "address[]",
          },
          {
            internalType: "uint256[2]",
            name: "affiliates",
            type: "uint256[2]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_buyer",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_seller",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct l_data_types.s_account",
        name: "account",
        type: "tuple",
      },
    ],
    name: "ev_account_edited",
    type: "event",
  },
];

const _bytecode =
  "0x61048a61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806351e5b1f81461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046102c5565b61006e565b604051901515815260200160405180910390f35b6020808201516001600160a01b03166000908152838252604080822054815180830190925260018252603560f81b938201939093529091156100cc5760405162461bcd60e51b81526004016100c391906103c4565b60405180910390fd5b5081516000908152602085815260409182902054825180840190935260018352601b60f91b9183019190915260ff16156101195760405162461bcd60e51b81526004016100c391906103c4565b506020808301516040808501518551600090815293889052922061013f92909190610166565b5080516020918201516001600160a01b031660009081529290915260409091205550600190565b60038301805460018101825560009182526020918290200180546001600160a01b0319166001600160a01b03851617905581516101ab916006860191908401906101bc565b5050815460ff191660011790915550565b8280546101c890610419565b90600052602060002090601f0160209004810192826101ea5760008555610230565b82601f1061020357805160ff1916838001178555610230565b82800160010185558215610230579182015b82811115610230578251825591602001919060010190610215565b5061023c929150610240565b5090565b5b8082111561023c5760008155600101610241565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561028e5761028e610255565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156102bd576102bd610255565b604052919050565b6000806000606084860312156102da57600080fd5b833592506020808501359250604085013567ffffffffffffffff8082111561030157600080fd5b908601906060828903121561031557600080fd5b61031d61026b565b82358152838301356001600160a01b038116811461033a57600080fd5b8185015260408301358281111561035057600080fd5b80840193505088601f84011261036557600080fd5b82358281111561037757610377610255565b610389601f8201601f19168601610294565b9250808352898582860101111561039f57600080fd5b8085850186850137600085828501015250816040820152809450505050509250925092565b600060208083528351808285015260005b818110156103f1578581018301518582016040015282016103d5565b81811115610403576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061042d57607f821691505b6020821081141561044e57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220e57a011ef5aa63dfd50f21e9036083ce70d87bef77074c5c1dea510dfef8224064736f6c634300080a0033";

type L_account_logicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L_account_logicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L_account_logic__factory extends ContractFactory {
  constructor(...args: L_account_logicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L_account_logic> {
    return super.deploy(overrides || {}) as Promise<L_account_logic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L_account_logic {
    return super.attach(address) as L_account_logic;
  }
  override connect(signer: Signer): L_account_logic__factory {
    return super.connect(signer) as L_account_logic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L_account_logicInterface {
    return new utils.Interface(_abi) as L_account_logicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L_account_logic {
    return new Contract(address, _abi, signerOrProvider) as L_account_logic;
  }
}
