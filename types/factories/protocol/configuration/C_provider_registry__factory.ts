/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  C_provider_registry,
  C_provider_registryInterface,
} from "../../../protocol/configuration/C_provider_registry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addresses_provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ev_addresses_provider_registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addresses_provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ev_addresses_provider_unregistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "get_addresses_provider_address_by_id",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addresses_provider",
        type: "address",
      },
    ],
    name: "get_addresses_provider_id_by_address",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_addresses_providers_list",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "register_addresses_provider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "unregister_addresses_provider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a90380380610a9083398101604081905261002f9161017a565b600080546001600160a01b03191633908117825560405190918291600080516020610a70833981519152908290a3506100678161006d565b506101aa565b6000546001600160a01b031633146100cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166101315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100c3565b600080546040516001600160a01b0380851693921691600080516020610a7083398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561018c57600080fd5b81516001600160a01b03811681146101a357600080fd5b9392505050565b6108b7806101b96000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806369755dc61161005b57806369755dc614610134578063715018a6146101475780638da5cb5b1461014f578063f2fde38b1461016057600080fd5b8063073a0ba11461008d5780630bdc561c146100d35780636273d73d146100e857806367afb3ae146100fd575b600080fd5b6100b661009b3660046106d8565b6000908152600260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e136600461070d565b610173565b005b6100f061032e565b6040516100ca9190610737565b61012661010b366004610784565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100ca565b6100e6610142366004610784565b610390565b6100e6610489565b6000546001600160a01b03166100b6565b6100e661016e366004610784565b6104fd565b6000546001600160a01b031633146101a65760405162461bcd60e51b815260040161019d906107a6565b60405180910390fd5b6040805180820190915260018152603160f81b6020820152816101dc5760405162461bcd60e51b815260040161019d91906107db565b5060008181526002602090815260409182902054825180840190935260018352603160f81b918301919091526001600160a01b03161561022f5760405162461bcd60e51b815260040161019d91906107db565b506001600160a01b038216600090815260016020818152604092839020548351808501909452918352601960f91b908301521561027f5760405162461bcd60e51b815260040161019d91906107db565b506001600160a01b03821660008181526001602081815260408084208690558584526002825280842080546001600160a01b0319908116871790915560038054878752600490945282862084905593830184559284527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180549092168417909155518392917f8827cf7f262ed80705edb7aac08292bd77671e5dc4ae5c79b8d20604c3c6c3ef91a35050565b6060600380548060200260200160405190810160405280929190818152602001828054801561038657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610368575b5050505050905090565b6000546001600160a01b031633146103ba5760405162461bcd60e51b815260040161019d906107a6565b6001600160a01b038116600090815260016020818152604092839020548351808501909452918352603360f81b908301526104085760405162461bcd60e51b815260040161019d91906107db565b506001600160a01b038116600081815260016020818152604080842080548086526002845291852080546001600160a01b0319169055948452919052915561044f826105e7565b60405181906001600160a01b038416907f1b9145fc92d20f24c83950693a4bf35eb0eaef90300b1f93281dfa682e34d31690600090a35050565b6000546001600160a01b031633146104b35760405162461bcd60e51b815260040161019d906107a6565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105275760405162461bcd60e51b815260040161019d906107a6565b6001600160a01b03811661058c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161019d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260046020526040812080549082905560035490919061061790600190610830565b9050808210156106a05760006003828154811061063657610636610855565b600091825260209091200154600380546001600160a01b03909216925082918590811061066557610665610855565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559290911681526004909152604090208290555b60038054806106b1576106b161086b565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b6000602082840312156106ea57600080fd5b5035919050565b80356001600160a01b038116811461070857600080fd5b919050565b6000806040838503121561072057600080fd5b610729836106f1565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156107785783516001600160a01b031683529284019291840191600101610753565b50909695505050505050565b60006020828403121561079657600080fd5b61079f826106f1565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208083528351808285015260005b81811015610808578581018301518582016040015282016107ec565b8181111561081a576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101561085057634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212200beb302d08bbe1b479650e63c222d55a310b370bfa06e1794e195bc5b6926fb864736f6c634300080a00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

type C_provider_registryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: C_provider_registryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class C_provider_registry__factory extends ContractFactory {
  constructor(...args: C_provider_registryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<C_provider_registry> {
    return super.deploy(owner, overrides || {}) as Promise<C_provider_registry>;
  }
  override getDeployTransaction(
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override attach(address: string): C_provider_registry {
    return super.attach(address) as C_provider_registry;
  }
  override connect(signer: Signer): C_provider_registry__factory {
    return super.connect(signer) as C_provider_registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): C_provider_registryInterface {
    return new utils.Interface(_abi) as C_provider_registryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): C_provider_registry {
    return new Contract(address, _abi, signerOrProvider) as C_provider_registry;
  }
}
