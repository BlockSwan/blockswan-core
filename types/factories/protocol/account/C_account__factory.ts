/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  C_account,
  C_accountInterface,
} from "../../../protocol/account/C_account";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract i_addresses_provider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ACCOUNT_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract i_addresses_provider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "create_account",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pub_key",
        type: "address",
      },
    ],
    name: "get_account_by_address",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "is_init",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "inviter_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xp",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "pub_keys",
            type: "address[]",
          },
          {
            internalType: "uint256[2]",
            name: "affiliates",
            type: "uint256[2]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_buyer",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_seller",
            type: "tuple",
          },
        ],
        internalType: "struct l_data_types.s_account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "account_id",
        type: "uint256",
      },
    ],
    name: "get_account_by_id",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "is_init",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "inviter_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xp",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "pub_keys",
            type: "address[]",
          },
          {
            internalType: "uint256[2]",
            name: "affiliates",
            type: "uint256[2]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_buyer",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_seller",
            type: "tuple",
          },
        ],
        internalType: "struct l_data_types.s_account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pub_key",
        type: "address",
      },
    ],
    name: "get_account_id_by_address",
    outputs: [
      {
        internalType: "uint256",
        name: "account_id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_accounts_count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_accounts_list",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "is_init",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "inviter_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "xp",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "pub_keys",
            type: "address[]",
          },
          {
            internalType: "uint256[2]",
            name: "affiliates",
            type: "uint256[2]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_buyer",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct Counters.Counter",
            name: "invite_seller",
            type: "tuple",
          },
        ],
        internalType: "struct l_data_types.s_account[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_pub_keys_count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract i_addresses_provider",
        name: "provider",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526000805534801561001457600080fd5b50604051610d0f380380610d0f83398101604081905261003391610044565b6001600160a01b0316608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b608051610c7a6100956000396000818160a801526107b60152610c7a6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a6d0344a11610066578063a6d0344a14610138578063b59c224614610140578063b7233e0d14610160578063c4d66de814610175578063f05493df1461018857600080fd5b80630542975c146100a35780632d2eb75b146100e7578063509f86331461011e5780635e45f6101461012857806361bbf49a14610130575b600080fd5b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6101106100f5366004610915565b6001600160a01b031660009081526037602052604090205490565b6040519081526020016100de565b61012661019b565b005b6101106102e9565b6101106102f9565b610110600181565b61015361014e366004610939565b610304565b6040516100de9190610a85565b61016861049d565b6040516100de9190610a98565b610126610183366004610915565b610715565b610153610196366004610915565b610838565b60006101a660345490565b905060006101b5826001610b10565b90506101c5603480546001019055565b6101d3603580546001019055565b600073__$e73932040b5c6884a49a0c0e7fc1761fe7$__6351e5b1f8603660376040518060600160405280878152602001336001600160a01b03168152602001604051806040016040528060048152602001631d195cdd60e21b8152508152506040518463ffffffff1660e01b815260040161025193929190610b28565b602060405180830381865af415801561026e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102929190610b76565b90508080156102a2575060345482145b604051806040016040528060018152602001603760f81b815250906102e35760405162461bcd60e51b81526004016102da9190610b98565b60405180910390fd5b50505050565b60006102f460345490565b905090565b60006102f460355490565b61030c61086b565b600082815260366020908152604091829020825161010081018452815460ff1615158152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561039b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161037d575b5050509183525050604080518082019182905260209092019190600484019060029082845b8154815260200190600101908083116103c057505050505081526020016006820180546103ec90610bab565b80601f016020809104026020016040519081016040528092919081815260200182805461041890610bab565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b505050918352505060408051602081810183526007850154825280840191909152815190810182526008909301548352015292915050565b606060006104a96102e9565b90506000808267ffffffffffffffff8111156104c7576104c7610be6565b60405190808252806020026020018201604052801561050057816020015b6104ed61086b565b8152602001906001900390816104e55790505b50905060015b83811161070b57600061051a600183610bfc565b60008381526036602052604090205490915060ff16156106ea57600082815260366020908152604091829020825161010081018452815460ff161515815260018201548184015260028201548185015260038201805485518186028101860190965280865291949293606086019392908301828280156105c357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105a5575b5050509183525050604080518082019182905260209092019190600484019060029082845b8154815260200190600101908083116105e8575050505050815260200160068201805461061490610bab565b80601f016020809104026020016040519081016040528092919081815260200182805461064090610bab565b801561068d5780601f106106625761010080835404028352916020019161068d565b820191906000526020600020905b81548152906001019060200180831161067057829003601f168201915b5050509183525050604080516020818101835260078501548252808401919091528151908101825260089093015483520152836106ca8684610bfc565b815181106106da576106da610c13565b60200260200101819052506106f8565b836106f481610c29565b9450505b508061070381610c29565b915050610506565b5091038152919050565b6001805460ff16806107265750303b155b80610732575060005481115b6107955760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b60648201526084016102da565b60015460ff161580156107b4576001805460ff19168117905560008290555b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614604051806040016040528060018152602001601960f91b815250906108215760405162461bcd60e51b81526004016102da9190610b98565b508015610833576001805460ff191690555b505050565b61084061086b565b6001600160a01b0382166000908152603760205260408120549061086382610304565b949350505050565b60405180610100016040528060001515815260200160008152602001600081526020016060815260200161089d6108df565b8152602001606081526020016108bf6040518060200160405280600081525090565b81526020016108da6040518060200160405280600081525090565b905290565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b038116811461091257600080fd5b50565b60006020828403121561092757600080fd5b8135610932816108fd565b9392505050565b60006020828403121561094b57600080fd5b5035919050565b8060005b60028110156102e3578151845260209384019390910190600101610956565b6000815180845260005b8181101561099b5760208185018101518683018201520161097f565b818111156109ad576000602083870101525b50601f01601f19169290920160200192915050565b805115158252602080820151818401526040808301519084015260608083015161012091850182905280519185018290526000926101408601929181019184905b80821015610a2c5783516001600160a01b03168552938201939282019260019190910190610a03565b505050506080830151610a426080860182610952565b5060a083015184820360c0860152610a5a8282610975565b91505060c0830151610a6f60e0860182519052565b5060e08301518051610100860152509392505050565b60208152600061093260208301846109c2565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610aed57603f19888603018452610adb8583516109c2565b94509285019290850190600101610abf565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b2357610b23610afa565b500190565b838152826020820152606060408201528151606082015260018060a01b03602083015116608082015260006040830151606060a0840152610b6c60c0840182610975565b9695505050505050565b600060208284031215610b8857600080fd5b8151801515811461093257600080fd5b6020815260006109326020830184610975565b600181811c90821680610bbf57607f821691505b60208210811415610be057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b600082821015610c0e57610c0e610afa565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610c3d57610c3d610afa565b506001019056fea2646970667358221220f4268929699f77524cd04a984bbd2de9c4ef243ab0778553bcfc0a027cbcc24a64736f6c634300080a0033";

type C_accountConstructorParams =
  | [linkLibraryAddresses: C_accountLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: C_accountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class C_account__factory extends ContractFactory {
  constructor(...args: C_accountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        C_account__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: C_accountLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e73932040b5c6884a49a0c0e7fc1761fe7\\$__", "g"),
      linkLibraryAddresses[
        "contracts/protocol/libraries/logics/l_account_logic.sol:l_account_logic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<C_account> {
    return super.deploy(provider, overrides || {}) as Promise<C_account>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): C_account {
    return super.attach(address) as C_account;
  }
  override connect(signer: Signer): C_account__factory {
    return super.connect(signer) as C_account__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): C_accountInterface {
    return new utils.Interface(_abi) as C_accountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): C_account {
    return new Contract(address, _abi, signerOrProvider) as C_account;
  }
}

export interface C_accountLibraryAddresses {
  ["contracts/protocol/libraries/logics/l_account_logic.sol:l_account_logic"]: string;
}
