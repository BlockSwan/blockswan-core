/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface C_provider_registryInterface extends utils.Interface {
  functions: {
    "get_addresses_provider_address_by_id(uint256)": FunctionFragment;
    "get_addresses_provider_id_by_address(address)": FunctionFragment;
    "get_addresses_providers_list()": FunctionFragment;
    "owner()": FunctionFragment;
    "register_addresses_provider(address,uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "unregister_addresses_provider(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "get_addresses_provider_address_by_id"
      | "get_addresses_provider_id_by_address"
      | "get_addresses_providers_list"
      | "owner"
      | "register_addresses_provider"
      | "renounceOwnership"
      | "transferOwnership"
      | "unregister_addresses_provider"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "get_addresses_provider_address_by_id",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "get_addresses_provider_id_by_address",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "get_addresses_providers_list",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "register_addresses_provider",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "unregister_addresses_provider",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "get_addresses_provider_address_by_id",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_addresses_provider_id_by_address",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_addresses_providers_list",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "register_addresses_provider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unregister_addresses_provider",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "ev_addresses_provider_registered(address,uint256)": EventFragment;
    "ev_addresses_provider_unregistered(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ev_addresses_provider_registered"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ev_addresses_provider_unregistered"
  ): EventFragment;
}

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface ev_addresses_provider_registeredEventObject {
  addresses_provider: string;
  id: BigNumber;
}
export type ev_addresses_provider_registeredEvent = TypedEvent<
  [string, BigNumber],
  ev_addresses_provider_registeredEventObject
>;

export type ev_addresses_provider_registeredEventFilter =
  TypedEventFilter<ev_addresses_provider_registeredEvent>;

export interface ev_addresses_provider_unregisteredEventObject {
  addresses_provider: string;
  id: BigNumber;
}
export type ev_addresses_provider_unregisteredEvent = TypedEvent<
  [string, BigNumber],
  ev_addresses_provider_unregisteredEventObject
>;

export type ev_addresses_provider_unregisteredEventFilter =
  TypedEventFilter<ev_addresses_provider_unregisteredEvent>;

export interface C_provider_registry extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: C_provider_registryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    get_addresses_provider_address_by_id(
      id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    get_addresses_provider_id_by_address(
      addresses_provider: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    get_addresses_providers_list(
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    register_addresses_provider(
      provider: PromiseOrValue<string>,
      id: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    unregister_addresses_provider(
      provider: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  get_addresses_provider_address_by_id(
    id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  get_addresses_provider_id_by_address(
    addresses_provider: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  get_addresses_providers_list(overrides?: CallOverrides): Promise<string[]>;

  owner(overrides?: CallOverrides): Promise<string>;

  register_addresses_provider(
    provider: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  unregister_addresses_provider(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    get_addresses_provider_address_by_id(
      id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    get_addresses_provider_id_by_address(
      addresses_provider: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_addresses_providers_list(overrides?: CallOverrides): Promise<string[]>;

    owner(overrides?: CallOverrides): Promise<string>;

    register_addresses_provider(
      provider: PromiseOrValue<string>,
      id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    unregister_addresses_provider(
      provider: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;

    "ev_addresses_provider_registered(address,uint256)"(
      addresses_provider?: PromiseOrValue<string> | null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ev_addresses_provider_registeredEventFilter;
    ev_addresses_provider_registered(
      addresses_provider?: PromiseOrValue<string> | null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ev_addresses_provider_registeredEventFilter;

    "ev_addresses_provider_unregistered(address,uint256)"(
      addresses_provider?: PromiseOrValue<string> | null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ev_addresses_provider_unregisteredEventFilter;
    ev_addresses_provider_unregistered(
      addresses_provider?: PromiseOrValue<string> | null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ev_addresses_provider_unregisteredEventFilter;
  };

  estimateGas: {
    get_addresses_provider_address_by_id(
      id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_addresses_provider_id_by_address(
      addresses_provider: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_addresses_providers_list(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    register_addresses_provider(
      provider: PromiseOrValue<string>,
      id: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    unregister_addresses_provider(
      provider: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    get_addresses_provider_address_by_id(
      id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_addresses_provider_id_by_address(
      addresses_provider: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_addresses_providers_list(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    register_addresses_provider(
      provider: PromiseOrValue<string>,
      id: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    unregister_addresses_provider(
      provider: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
